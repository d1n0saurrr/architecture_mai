version: '3.3'

services:
  # first sharding
  db_node_01:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db_node_01
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_LOGIN}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3360:${DB_PORT}
    healthcheck:
      test: "/usr/bin/mysql --host=db_node_01 --database=${DB_DATABASE} --user=${DB_LOGIN} --password=${DB_PASSWORD} --execute \"SHOW DATABASES;\""
      timeout: 5s
      retries: 5
    volumes:
      - ./mariadb/main_script:/docker-entrypoint-initdb.d
      - db-node-01-data:/var/lib/mysql

  # second sharding
  db_node_02:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db_node_02
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_LOGIN}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3361:${DB_PORT}
    healthcheck:
      test: "/usr/bin/mysql --host=db_node_02 --database=${DB_DATABASE} --user=${DB_LOGIN} --password=${DB_PASSWORD} --execute \"SHOW DATABASES;\""
      timeout: 5s
      retries: 5
    volumes:
      - ./mariadb/main_script:/docker-entrypoint-initdb.d
      - db-node-02-data:/var/lib/mysql
  
  # sequence
  db_node_03:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db_node_03
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_LOGIN}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3362:${DB_PORT}
    healthcheck:
      test: "/usr/bin/mysql --host=db_node_03 --database=${DB_DATABASE} --user=${DB_LOGIN} --password=${DB_PASSWORD} --execute \"SHOW DATABASES;\""
      timeout: 5s
      retries: 5
    volumes:
      - ./mariadb/sequence:/docker-entrypoint-initdb.d
      - db-node-03-data:/var/lib/mysql

  proxysql:
    build:
      context: proxysql
      dockerfile: Dockerfile
    container_name: proxysql
    # volumes:
    #   - proxysql-data:/var/lib/proxysql
    healthcheck:
      test: "/usr/bin/mysql -h 127.0.0.1 -P ${DB_RPOXY_PORT} --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 5s
      retries: 5
    depends_on:
      - db_node_01
      - db_node_02
      - db_node_03
    networks:
      - arch-network
    ports:
      # Mysql Client Port
      - 6033:${DB_RPOXY_PORT}
      # Mysql Admin Port
      - "6032:6032"

  cache:
    image: redis:6.2-alpine
    container_name: cache
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning 
    networks:
      - arch-network
    volumes: 
      - cache:/data

  auth_service:
    build:
      context: ./
      dockerfile: ./auth_service/Dockerfile
    container_name: auth_service
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - AUTH_SERVICE_PORT=8081
      - CACHE=cache:6379
    ports:
      - 8081:8081
    networks:
      - arch-network
    depends_on:
      db_node_01:
        condition: service_healthy
      cache:
        condition: service_started

  user_service:
    build:
      context: ./
      dockerfile: ./user_service/Dockerfile
    container_name: user_service
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - USER_SERVICE_PORT=8082
      - AUTH_SERVICE_HOST=auth_service
      - AUTH_SERVICE_PORT=8081
      - CACHE=cache:6379
    ports:
      - 8082:8082
    networks:
      - arch-network
    depends_on:
      db_node_01:
        condition: service_healthy
      cache:
        condition: service_started

  # trip_service:
  #   build:
  #     context: trip_service
  #     dockerfile: Dockerfile
  #   container_name: trip_service
  #   environment:
  #     - DB_HOST=proxysql
  #     - DB_PORT=6033
  #     - DB_LOGIN=stud
  #     - DB_PASSWORD=stud
  #     - DB_DATABASE=archdb
  #     - TRIP_SERVICE_PORT=8083
  #     - USER_SERVICE_PORT=8082
  #     - AUTH_SERVICE_PORT=8081
  #     - AUTH_SERVICE_HOST=auth_service
  #   ports:
  #     - 8083:8083
  #   networks:
  #     - arch-network
  #   depends_on:
  #     db_node_01:
  #       condition: service_healthy
  
volumes:
  db-node-01-data:
  db-node-02-data:
  db-node-03-data:
  proxysql-data:
  cache:

networks:
  arch-network:
    driver: "bridge"
    external: false