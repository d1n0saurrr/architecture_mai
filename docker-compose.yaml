version: '3.3'

services:
  db_node_01:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db_node_01
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_LOGIN}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3360:${DB_PORT}
    healthcheck:
      test: "/usr/bin/mysql --host=db_node_01 --database=${DB_DATABASE} --user=${DB_LOGIN} --password=${DB_PASSWORD} --execute \"SHOW DATABASES;\""
      timeout: 5s
      retries: 5

  auth_service:
    build:
      context: auth_service
      dockerfile: Dockerfile
    container_name: auth_service
    environment:
      DB_HOST: db_node_01
      DB_PORT: ${DB_PORT}
      DB_LOGIN: ${DB_LOGIN}
      DB_PASSWORD: ${DB_LOGIN}
      DB_DATABASE: ${DB_DATABASE}
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
    ports:
      - ${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}
    networks:
      - arch-network
    depends_on:
      db_node_01:
        condition: service_healthy

  user_service:
    build:
      context: user_service
      dockerfile: Dockerfile
    container_name: user_service
    environment:
      DB_HOST: db_node_01
      DB_PORT: ${DB_PORT}
      DB_LOGIN: ${DB_LOGIN}
      DB_PASSWORD: ${DB_LOGIN}
      DB_DATABASE: ${DB_DATABASE}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
      AUTH_SERVICE_HOST: auth_service
    ports:
      - ${USER_SERVICE_PORT}:${USER_SERVICE_PORT}
    networks:
      - arch-network
    depends_on:
      db_node_01:
        condition: service_healthy

  trip_service:
    build:
      context: trip_service
      dockerfile: Dockerfile
    container_name: trip_service
    environment:
      DB_HOST: db_node_01
      DB_PORT: ${DB_PORT}
      DB_LOGIN: ${DB_LOGIN}
      DB_PASSWORD: ${DB_LOGIN}
      DB_DATABASE: ${DB_DATABASE}
      TRIP_SERVICE_PORT: ${TRIP_SERVICE_PORT}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
      AUTH_SERVICE_HOST: auth_service
    ports:
      - ${TRIP_SERVICE_PORT}:${TRIP_SERVICE_PORT}
    networks:
      - arch-network
    depends_on:
      db_node_01:
        condition: service_healthy
  
volumes:
  db-node-01-data:

networks:
  arch-network:
    driver: "bridge"
    external: false